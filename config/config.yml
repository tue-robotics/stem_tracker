
update_rate:                    100                             # spin rate of stem_tracking node, in hz
base_frame:                     /amigo/base_link                # frame we use to define stem and to show markers in rviz

#######################
# ROBOT CONFIG
#######################

robot_urdf_file:                /home/amigo/ros/hydro/system/src/amigo_description/urdf/amigo.urdf
use_leftarm:                    1                               # use left arm if true (1), else use right arm
robot_description_rosparam:     /amigo/robot_description        # amigo urdf model gets loaded from this rosparam
root_link:                      base_link                       # start of kinematic chain we are controlling
left_end_link:                  grippoint_left                  # end of kinematic chain we are controlling, if use_leftarm
right_end_link:                 grippoint_right                 # end of kinematic chain we are controlling, if not use_leftarm
joints_up_to_date_threshold:    0.1                            # consider joints status up to date if measurement received
                                                                 # within passed x sec
whiskers_up_to_date_threshold:  0.1            # consider whisker status up to date if measurement received
                                                # within passed x sec
pressure_sensors_up_to_date_threshold:  0.1    # consider pressure sensors status up to date if measurement received
                                                # within passed x sec
initial_pose:               # pose used as preposition, length should be equal to the number
    - q: 0.1                 # of joints in kinematic chain
    - q: -0.1
    - q: -0.6
    - q: 0.0
    - q: 1.8
    - q: -0.1
    - q: 0.4
    - q: 0.0

max_gripper_pose:                               # roll and pitch: max gripper rotation wrt base frame, along_stem: max gripper
    - {roll: 0.3, pitch: 0.1, along_stem: 0.2}   # rotation around possibly tilted stem (all radians)


#######################
# WHISKERGRIPPER CONFIG
#######################

n_seconds_for_initialization:	5.0             # number of seconds we take to average whisker and pressure sensor values during
                                                 # initialization (the average will be used as nominal value)

n_sec_for_moving_av:    3.0

whisker_coverage:                                                 # Angular 'piece of the pie' covered by a whisker in the xy plane
    - {min: 0, max: 65, n_whiskers: 2, grasp_check: 1}            # of the gripper. Positive is rotating x towards y. Direction of x
    - {min: 65, max: 110, n_whiskers: 2, grasp_check: 0}           # is zero. Unit: degrees between 0 and 360 (integers). The order is
    - {min: 100, max: 135, n_whiskers: 1, grasp_check: 0}          # the order at which the whisker values are stored in RobotStatus. If
    - {min: 135, max: 225, n_whiskers: 2, grasp_check: 0}          # a whisker is used to check whether the stem enters/leaves the gripper
    - {min: 225, max: 260, n_whiskers: 1, grasp_check: 0}          # grasp_check = 1
    - {min: 250, max: 295, n_whiskers: 2, grasp_check: 0}
    - {min: 295, max: 360, n_whiskers: 2, grasp_check: 1}

whisker_touched_normalized_threshold: 0.02      # Whisker deviations are normalized based on config_file_whisker_touched_max. We consider a whisker unit
                                                # touched when the normalized error is larger than this threshold

config_file_whiskers_touched_max:   "whisker_touched_max.yml"

pressure_sensor_strip_coverage:      # Angular 'piece of the pie' covered by a single pressure sensor sensor in the xy plane of the gripper.
    - {min: 40, max: 140}             # Positive is rotating x towards y. Direction of x is zero. Unit: degrees between 0 and 360 (integers).
    - {min: 140, max: 220}
    - {min: 220, max: 320}

pressure_sensor_location:      # Angular location of the pressure sensors in the xy plane of the gripper. Positive
    - ang: 70                   # is rotating x towards y. Direction of x is zero. Unit: degrees between 0 and 360 (integers).
    - ang: 110                  # The order is the order at which the pressure sensor values are stored in RobotStatus.
    - ang: 180
    - ang: 250
    - ang: 295

pressure_sensor_touched_normalized_threshold:  0.03   # Pressure sensor deviations are normalized based on config_file_pressure_sensor_touched_max. We
                                                       # consider a pressure sensor coverage touched when the normalized deviation is larger than this value

config_file_pressure_sensor_touched_max: "pressure_sensor_touched_max.yml"

whisker_length:                 0.03          # length of a single whisker, in meters
gripper_diameter:               0.01           # diameter of gripper at whisker-root, in meters

#######################
# TOMATO STEM CONFIG
#######################

stem_length_used_for_tangent:             0.2           # we use the last x meters of the stem to fit an approximated tangent of stem, if the stem length is less
                                                         # than this value we assume the tangent is straight up (z-axis)
stem_start_xyz:
    - {x: 0.5, y: 0.26, z: 0.53}

length_first_node:              0.25           # first stem node is put x meters underneath stem_start_xyz
add_or_remove_node_euclidian_threshold: 0.01    # when gripper xyz is further than x meters away from highest node in stem
                                                # representation a node is removed when gripper is below it, or added when gripper is above

##########################
# TRACKING CONTROL CONFIG
##########################

move_up_ref:                    0.001         # put xyz ref up (in direction of stem tangent) for x meters when moving
                                               # up (state FOLLOW)
move_in_tilt_direction:         1             # if true (1) move_up_ref will be in the estimated tilt direction of the stem, else move_up_ref will be
                                               # straight up in z-direction of the base frame
tilt_with_stem:                 0             # if true (1) tilt gripper based on local derivative of stem
rotate_along_stem:              0             # if true (1) the gripper will rotate along the stem to avoid its gipper yaw joint limits. Note:
                                               # currently not implemented!!
debug_ik_solver:                0             # if true (1) status of kdl ik solver will be printed
ik_vel_only:                    0             # if true (1) after initialization we only use kdl ik velocity solver, no
                                               # fk or ik position solvers
xyz_reached_threshold:          0.01          # if cartesian position error of the gripper in robot-status is below this
                                               # threshold position is considered reached
pos_reached_threshold:          0.01          # if absolute position error for each of the joints in robot-status is below
                                               # this threshold position is considered reached
straight_forward_ref:           0.03          # put xyz ref forward for x meters when asked moving forward
print_joint_ref_vs_current:     0             # if true (1) current joint positions and reference joint positions are printed
                                               # every time a cart setpoint is converted to joint position setpoints
xyz_setpoint_multiplication_at_max_torso: 1.0    # ugly hack, temporary
debug_desired_gripper_pose:     1              # if true (1) desired gripper pose will be shown in rviz together with estimated
                                                # stem tangent
debug_joint_max:                0              # if true (1) warnings will be printed every time a joint reference reaches or passes a
                                                # joint limit
##########################
# TRACKING MONITOR CONFIG
##########################

debug_state_par:                1             # if true (1) state will be printed every time it changes
find_max_touched_values:        0              # if true (1) robot will move to preposition and stay there while storing
                                               # the maximum values it knows for whiskers deflection and for pressure sensing
                                               # in config_file_whiskers_touched_max and config_file_pressure_sensor_touched_max

##########################
# VISUALIZATION CONFIG
##########################

buffer_size:                    100         # buffer size for rviz marker topic
touched_arrow_liftime:          0.02        # when whisker touched show an arrow for x seconds, set to -1.0 to show until
                                             # next msg
show_setpoint_lifetime:         0.02        # show cartesian setpoint and current pos of gripper for x seconds, set to
                                             # -1.0 to show until next msg
show_stem_tangent_lifetime:     3.0         # show estimated tangent of stem at current gripper pos for x seconds, set to
                                             # -1.0 to show until next msg
