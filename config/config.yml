
update_rate:                    100                             # spin rate of stem_tracking node, in hz
loglevel:                       1                               # if larger than zero additional information will be printed (currently only one loglevel implemented)
base_frame:                     /amigo/base_link                # frame we use to define stem and to show markers in rviz

#######################
# ROBOT CONFIG
#######################

robot_urdf_file:                /home/amigo/ros/hydro/system/src/amigo_description/urdf/amigo.urdf
use_leftarm:                    1                               # use left arm if true (1), else use right arm
robot_description_rosparam:     /amigo/robot_description        # amigo urdf model gets loaded from this rosparam
root_link:                      base_link                       # start of kinematic chain we are controlling
left_end_link:                  grippoint_left                  # end of kinematic chain we are controlling, if use_leftarm
right_end_link:                 grippoint_right                 # end of kinematic chain we are controlling, if not use_leftarm
joints_up_to_date_threshold:    0.05                            # consider joints status up to date if measurement received within passed x sec
whiskers_up_to_date_threshold:  0.1                             # consider whisker status up to date if measurement received within passed x sec
initial_pose:                                                   # pose used as preposition, length should be equal to the number of joints in kinematic chain
    - {q: 0.1}
    - {q: -0.1}
    - {q: -0.6}
    - {q: 0.0}
    - {q: 1.8}
    - {q: -0.1}
    - {q: 0.4}
    - {q: 0.0}

#######################
# WHISKER CONFIG
#######################

whisker_angles:                     # Angle the center of the area covered by this whisker makes wrt the x-axes in the
    - {ang: -1}   #13                # xy plane of the gripper. Positive is rotating x towards y. Unit: degrees between 0
    - {ang: 45}   # 7                # and 360 (integers). Provide -1 for the left 'grasp whisker' and -2 for the right
    - {ang: 80}   # 2                # 'grasp whisker'. Order is order at which the whisker values are stored in the message
    - {ang: 100}  #14                # coming from orocos.
    - {ang: 135}  #15
    - {ang: 160}  #16
    - {ang: 210}  #17
    - {ang: 230}  # 4
    - {ang: 270}  # 1
    - {ang: 290}  #10
    - {ang: 310}  # 5
    - {ang: -2}   # 3
whisker_length:                 0.05                            # length of a single whisker, in meters (used only for sim)
gripper_diameter:               0.1                             # diameter of gripper at whisker-root, in meters (used only for sim)
max_whisker_force:              1.0                             # force applied to the stem by a fully bended (90 degrees) whisker (used only for sim)
n_samples_for_initialization:	100                             # number of samples we take to average whisker values during initialization (the average will be considered the nominal value)

#######################
# TOMATO STEM CONFIG
#######################

lin_tan_d:                      0.1                             # distance in z we use to calculate local linear tangent of stem
stem_nodes:                                                     # stem nodes, defined in root_link
#    - {x: 0.55, y: 0.35, z: 0.62}
#    - {x: 0.2, y: 0.6, z: 0.62}  
    - {x: 0.55, y: 0.3, z: 1.0}
    - {x: 0.55, y: 0.3, z: 1.2}

##########################
# TRACKING CONTROL CONFIG
##########################

max_z_dot:                      0.5                             # max gripper velocity in vertical direction during stem tracking (m/s)
tilt_with_stem:                 0                               # if true (1) tilt gripper based on local derivative of stem
debug_ik_solver:                0                               # if true (1) status of kdl ik solver will be printed
ik_vel_only:                    0                               # if true (1) after initialization we only use kdl ik velocity solver, no fk or ik position solvers
xyz_reached_threshold:          0.05                            # if cartesian position error of the gripper in robot-status is below this threshold position is considered reached
pos_reached_threshold:          0.1                             # if absolute position error for each of the joints in robot-status is below this threshold position is considered reached

##########################
# TRACKING MONITOR CONFIG
##########################

debug_state_par:                1                               # if true (1) state will be printed every time it changes

##########################
# VISUALIZATION CONFIG
##########################

topic_name:                     stem_track_markers              # name of topic through which rviz markers are published
buffer_size:                    100                             # buffer size for rviz marker topic
